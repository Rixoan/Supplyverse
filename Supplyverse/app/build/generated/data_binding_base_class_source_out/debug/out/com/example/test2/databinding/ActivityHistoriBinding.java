// Generated by view binder compiler. Do not edit!
package com.example.test2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.test2.R;
import com.google.android.material.tabs.TabItem;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHistoriBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout activityHistori;

  @NonNull
  public final TabItem blmBayar;

  @NonNull
  public final TabItem diBayar;

  @NonNull
  public final TabItem selesai;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final ViewPager viewpagerHistori;

  private ActivityHistoriBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout activityHistori, @NonNull TabItem blmBayar,
      @NonNull TabItem diBayar, @NonNull TabItem selesai, @NonNull TabLayout tabLayout,
      @NonNull ViewPager viewpagerHistori) {
    this.rootView = rootView;
    this.activityHistori = activityHistori;
    this.blmBayar = blmBayar;
    this.diBayar = diBayar;
    this.selesai = selesai;
    this.tabLayout = tabLayout;
    this.viewpagerHistori = viewpagerHistori;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHistoriBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHistoriBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_histori, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHistoriBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout activityHistori = (ConstraintLayout) rootView;

      id = R.id.blmBayar;
      TabItem blmBayar = ViewBindings.findChildViewById(rootView, id);
      if (blmBayar == null) {
        break missingId;
      }

      id = R.id.diBayar;
      TabItem diBayar = ViewBindings.findChildViewById(rootView, id);
      if (diBayar == null) {
        break missingId;
      }

      id = R.id.selesai;
      TabItem selesai = ViewBindings.findChildViewById(rootView, id);
      if (selesai == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.viewpager_histori;
      ViewPager viewpagerHistori = ViewBindings.findChildViewById(rootView, id);
      if (viewpagerHistori == null) {
        break missingId;
      }

      return new ActivityHistoriBinding((ConstraintLayout) rootView, activityHistori, blmBayar,
          diBayar, selesai, tabLayout, viewpagerHistori);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
